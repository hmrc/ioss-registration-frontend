# microservice specific routes

->          /hmrc-frontend                                       hmrcfrontend.Routes

GET         /                                                    controllers.IndexController.onPageLoad()

GET         /assets/*file                                        controllers.Assets.versioned(path="/public", file: Asset)

GET         /language/:lang                                      controllers.LanguageSwitchController.switchToLanguage(lang: String)

GET         /refresh-session                                     controllers.KeepAliveController.keepAlive
GET         /refresh-session-unauthenticated                     controllers.KeepAliveController.keepAliveUnauthenticated()

GET         /there-is-a-problem                                  controllers.JourneyRecoveryController.onPageLoad(continueUrl: Option[RedirectUrl] ?= None)

GET         /check-your-answers                                  controllers.CheckYourAnswersController.onPageLoad()

GET         /identity-problem                                    controllers.auth.IdentityVerificationController.identityError(continueUrl: String)
GET         /identity-complete                                   controllers.auth.IdentityVerificationController.handleIvFailure(continueUrl: String, journeyId: Option[String])
GET         /iv/error                                            controllers.auth.IvReturnController.error(continueUrl: String)
GET         /iv/incomplete                                       controllers.auth.IvReturnController.incomplete(continueUrl: String)
GET         /iv/insufficient-evidence                            controllers.auth.IvReturnController.insufficientEvidence(continueUrl: String)
GET         /iv/locked-out                                       controllers.auth.IvReturnController.lockedOut(continueUrl: String)
GET         /iv/precondition-failed                              controllers.auth.IvReturnController.preconditionFailed(continueUrl: String)
GET         /iv/technical-issue                                  controllers.auth.IvReturnController.technicalIssue(continueUrl: String)
GET         /iv/timeout                                          controllers.auth.IvReturnController.timeout(continueUrl: String)
GET         /iv/user-aborted                                     controllers.auth.IvReturnController.userAborted(continueUrl: String)
GET         /iv/insufficient-evidence-sources                    controllers.auth.IvReturnController.notEnoughEvidenceSources(continueUrl: String)
GET         /iv/failed-matching                                  controllers.auth.IvReturnController.failedMatching(continueUrl: String)
GET         /iv/failed-identity-verification                     controllers.auth.IvReturnController.failed(continueUrl: String)

GET         /account/sign-out-survey                             controllers.auth.AuthController.signOut
GET         /account/sign-out                                    controllers.auth.AuthController.signOutNoSurvey
GET         /account/signed-out                                  controllers.auth.SignedOutController.onPageLoad
GET         /account/login                                       controllers.auth.AuthController.redirectToLogin(continueUrl: String)
GET         /account/register                                    controllers.auth.AuthController.redirectToRegister(continueUrl: String)
GET         /cannot-use-agent                                    controllers.auth.AuthController.unsupportedAffinityGroup()
GET         /provider-unsupported                                controllers.auth.AuthController.unsupportedAuthProvider(continueUrl: String)
GET         /credential-unsupported                              controllers.auth.AuthController.insufficientEnrolments()
GET         /account/role-unsupported                            controllers.auth.AuthController.unsupportedCredentialRole()

GET         /on-sign-in                                          controllers.auth.AuthController.onSignIn()

GET         /unauthorised                                        controllers.UnauthorisedController.onPageLoad()

GET         /registration-service-error                          controllers.VatApiDownController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /answers-deleted                                     controllers.AnswersDeletedController.onPageLoad()

# Filter questions section
GET         /ioss-registered                                     controllers.filters.RegisteredForIossInEuController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /ioss-registered                                     controllers.filters.RegisteredForIossInEuController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-already-registered                  controllers.filters.CannotRegisterAlreadyRegisteredController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /selling-goods-outside-single-market                 controllers.filters.SellsGoodsToEuOrNiController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /selling-goods-outside-single-market                 controllers.filters.SellsGoodsToEuOrNiController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-ioss                                controllers.filters.CannotRegisterForIossController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /goods-value                                         controllers.filters.GoodsConsignmentValueController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /goods-value                                         controllers.filters.GoodsConsignmentValueController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /do-not-need-to-account-for-eu-vat                   controllers.filters.ConsignmentValueExceedsLimitController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /registered-for-vat-in-uk                            controllers.filters.RegisteredForVatInUkController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /registered-for-vat-in-uk                            controllers.filters.RegisteredForVatInUkController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-no-vat-in-uk                        controllers.filters.CannotRegisterNoVatInUkController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /ni-based                                            controllers.filters.BusinessBasedInNiController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /ni-based                                            controllers.filters.BusinessBasedInNiController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /norway-based                                        controllers.filters.NorwegianBasedBusinessController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /norway-based                                        controllers.filters.NorwegianBasedBusinessController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /register-to-use-service                             controllers.filters.EligibleToRegisterController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /register-to-use-service                             controllers.filters.EligibleToRegisterController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-no-ni-or-norway-business            controllers.filters.CannotRegisterNoNiOrNorwayBusinessController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

# VAT details section
GET         /confirm-vat-details                                 controllers.checkVatDetails.CheckVatDetailsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /confirm-vat-details                                 controllers.checkVatDetails.CheckVatDetailsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /register-different-business                         controllers.checkVatDetails.UseOtherAccountController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /update-vat-details                                  controllers.checkVatDetails.UpdateVatDetailsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /expired-vrn-date                                    controllers.ExpiredVrnDateController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-no-ni-protocol                      controllers.CannotRegisterNoNiProtocolController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

GET         /cannot-register-not-norwegian-based-business        controllers.CannotRegisterNotNorwegianBasedBusinessController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

# Trading name section
GET         /have-uk-trading-name                                controllers.tradingNames.HasTradingNameController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /have-uk-trading-name                                controllers.tradingNames.HasTradingNameController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /uk-trading-name/:index                              controllers.tradingNames.TradingNameController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /uk-trading-name/:index                              controllers.tradingNames.TradingNameController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /add-uk-trading-name                                 controllers.tradingNames.AddTradingNameController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /add-uk-trading-name                                 controllers.tradingNames.AddTradingNameController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /remove-uk-trading-name/:index                       controllers.tradingNames.DeleteTradingNameController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /remove-uk-trading-name/:index                       controllers.tradingNames.DeleteTradingNameController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /remove-all-trading-names                            controllers.tradingNames.DeleteAllTradingNamesController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /remove-all-trading-names                            controllers.tradingNames.DeleteAllTradingNamesController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

# EU details section
GET         /tax-in-eu                                           controllers.euDetails.TaxRegisteredInEuController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /tax-in-eu                                           controllers.euDetails.TaxRegisteredInEuController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET         /eu-tax/:index                                       controllers.euDetails.EuCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /eu-tax/:index                                       controllers.euDetails.EuCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /how-do-you-operate/:index                           controllers.euDetails.SellsGoodsToEuConsumerMethodController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST        /how-do-you-operate/:index                           controllers.euDetails.SellsGoodsToEuConsumerMethodController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /cannot-register-need-to-operate-as-fe               controllers.euDetails.CannotRegisterFixedEstablishmentOperationOnlyController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)

# Business contact details section
GET         /business-contact-details                            controllers.BusinessContactDetailsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /business-contact-details                            controllers.BusinessContactDetailsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

# Bank details section
GET         /bank-details                                        controllers.BankDetailsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /bank-details                                        controllers.BankDetailsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET        /previous-oss                                         controllers.previousRegistrations.PreviouslyRegisteredController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST       /previous-oss                                         controllers.previousRegistrations.PreviouslyRegisteredController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET        /previous-country/:index                                             controllers.previousRegistrations.PreviousEuCountryController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST       /previous-country/:index                                             controllers.previousRegistrations.PreviousEuCountryController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)


GET        /previous-scheme/:countryIndex/:schemeIndex                          controllers.previousRegistrations.PreviousSchemeController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)
POST       /previous-scheme/:countryIndex/:schemeIndex                          controllers.previousRegistrations.PreviousSchemeController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)


GET        /previous-oss-scheme-number/:countryIndex/:schemeIndex               controllers.previousRegistrations.PreviousOssNumberController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)
POST       /previous-oss-scheme-number/:countryIndex/:schemeIndex               controllers.previousRegistrations.PreviousOssNumberController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)

GET        /previous-ioss-scheme/:countryIndex/:schemeIndex                     controllers.previousRegistrations.PreviousIossSchemeController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)
POST       /previous-ioss-scheme/:countryIndex/:schemeIndex                     controllers.previousRegistrations.PreviousIossSchemeController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)


GET        /previous-ioss-number/:countryIndex/:schemeIndex                     controllers.previousRegistrations.PreviousIossNumberController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)
POST       /previous-ioss-number/:countryIndex/:schemeIndex                     controllers.previousRegistrations.PreviousIossNumberController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)


GET        /previous-scheme-answers/:index                                      controllers.previousRegistrations.CheckPreviousSchemeAnswersController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST       /previous-scheme-answers/:index                                      controllers.previousRegistrations.CheckPreviousSchemeAnswersController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)


GET        /remove-deregistration/:index                                        controllers.previousRegistrations.DeletePreviousRegistrationController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, index: Index)
POST       /remove-deregistration/:index                                        controllers.previousRegistrations.DeletePreviousRegistrationController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, index: Index)

GET         /remove-previous-scheme/:countryIndex/:schemeIndex                  controllers.previousRegistrations.DeletePreviousSchemeController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)
POST        /remove-previous-scheme/:countryIndex/:schemeIndex                  controllers.previousRegistrations.DeletePreviousSchemeController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints, countryIndex: Index, schemeIndex: Index)

GET        /previous-schemes-overview                                           controllers.previousRegistrations.AddPreviousRegistrationController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST       /previous-schemes-overview                                           controllers.previousRegistrations.AddPreviousRegistrationController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)

GET        /cannot-delete-previous-registrations                                controllers.previousRegistrations.CannotRemoveExistingPreviousRegistrationsController.onPageLoad()

GET         /check-remove-all-previous-registrations                            controllers.DeleteAllPreviousRegistrationsController.onPageLoad(waypoints: Waypoints ?= EmptyWaypoints)
POST        /check-remove-all-previous-registrations                            controllers.DeleteAllPreviousRegistrationsController.onSubmit(waypoints: Waypoints ?= EmptyWaypoints)
